# #!/bin/bash
snippet sh
	#!/bin/sh
	set -eu -o pipefail

	${1}

snippet bash
	#!/bin/bash
	set -eu -o pipefail

	${1}

snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi

snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}

snippet fo
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done

snippet fi
	for ${1} in ${2}
	do
		${3:#statements}
	done

snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done

snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done

snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac

snippet null
	${1:cmd} > /dev/null 2>&1${2}

snippet exit
	trap '${1:cmd}' EXIT

# http://sfujiwara.hatenablog.com/entry/20120613/1339547638
snippet syslog
	${1:cmd} 2>&1 | logger -t ${2:mycommand} -p ${3:local0.info}${4}

snippet sed
	set -e 's/${1:pattern}/${2:replacement}/'${3}

snippet awk
	awk -e '{ ${1:pattern} }'${2}


snippet env
	#!/usr/bin/env ${1}

snippet hd
	$(cat << EOF
	${1}
	EOF
	)

snippet now
	now=$(date +"%Y%m%d_%I%M%S")

snippet tmp
	${1:TMPFILE}="mktemp -t ${2:untitled}"
	trap "rm -f '$${1}'" 0               # EXIT
	trap "rm -f '$${1}'; exit 1" 2       # INT
	trap "rm -f '$${1}'; exit 1" 1 15    # HUP TERM
	${0}

snippet cwd
	CWD=$(cd $(dirname $0$${1:0}) && pwd)${2}

snippet mul
	 SCRIPT_PID="/path/to/run_script.pid"
	if [ -f $SCRIPT_PID ]; then
		PID=`cat $SCRIPT_PID `
		if (ps -e | awk '{print $1}' | grep $PID >/dev/null); then
			exit
		fi
	fi
	echo $$ > $SCRIPT_PID

	${1}

	rm $SCRIPT_PID

snippet fn
	function ${1}() {
		${2}
	}

snippet usage
	function usage() {
		cat << EOF
	Usage:
		\$0 <${1:arg}> ${2}
	EOF
	}

	if [ $# -ne 1 ]; then
		usage
		exit 1
	fi

snippet whileread
	while read -r ${1:line}
	do
		echo "${${1:line}}"
	done
