{
  "shebang sh": {
    "prefix": "sh",
    "body": [
      "#!/bin/sh",
      "set -eu",
      "",
      "$0"
    ],
    "description": "shebang sh"
  },
  "shebang bash": {
    "prefix": "bash",
    "body": [
      "#!/bin/bash",
      "set -eu",
      "",
      "$0"
    ],
    "description": "shebang bash"
  },
  "shebang env bash": {
    "prefix": "env",
    "body": [
      "#!/usr/bin/env ${1:bash}",
      "set -eu",
      "",
      "$0"
    ],
    "description": "shebang env bash"
  },
  "current working directory": {
    "prefix": "cwd",
    "body": [
      "CWD=\\$(cd -P -- \"\\$(dirname -- \"\\$0\")\" && pwd -P)"
    ],
    "description": "current working directory"
  },
  "logger": {
    "prefix": "logger",
    "body": [
      "logger -t ${1:tag_name} ${2:message}"
    ],
    "description": "logger syslog"
  },
  "syslog": {
    "prefix": "syslog",
    "body": [
      "2>&1 | logger -t ${1:tag_name} ${2:message}"
    ],
    "description": "syslog"
  },
  "/dev/null": {
    "prefix": "null",
    "body": [
      "> /dev/null 2>&1"
    ],
    "description": "/dev/null"
  },
  "trap EXIT": {
    "prefix": "exit",
    "body": [
      "trap \"${1:echo 'exit \\$(basename \\$0)'}\" EXIT"
    ],
    "description": "trap EXIT"
  },
  "now datetime": {
    "prefix": "now",
    "body": [
      "now=\\$(date +\"%Y%m%d_%I%M%S\")"
    ],
    "description": "now datetime"
  },
  "here document": {
    "prefix": "hd",
    "body": [
      "\\$(cat << EOF",
      "$0",
      "EOF",
      ")"
    ],
    "description": "here document"
  },
  "sed": {
    "prefix": "sed",
    "body": [
      "sed -e \"s/${1:pattern}/${2:replacement}/\" ${3}"
    ],
    "description": "sed"
  },
  "sed -i": {
    "prefix": "sedi",
    "body": [
      "sed -i -e \"s/${1:pattern}/${2:replacement}/\" ${3}"
    ],
    "description": "sed -i"
  },
  "Multiple startup prevention": {
    "prefix": "mul",
    "body": [
      "SCRIPT_PID=\"${1:/tmp/script_name.pid}\"",
      "if [ -f \\$SCRIPT_PID ]; then",
      "\tPID=`cat \\$SCRIPT_PID`",
      "\tif (ps -e | awk '{print \\$1}' | grep \\$PID > /dev/null); then",
      "\t\t${2:# comment}",
      "\t\texit",
      "\tfi",
      "fi",
      "echo \\$\\$ > \\$SCRIPT_PID",
      "",
      "${0:# cmd}",
      "",
      "rm \\$SCRIPT_PID"
    ],
    "description": "Multiple startup prevention"
  },
  "case": {
    "prefix": "case",
    "body": [
      "case \"${1:var}\" in",
      "\t${2:cond} )",
      "\t\t${3:# :}",
      "\t\t;;",
      "\t* )",
      "\t\t${4:# :}",
      "\t\t;;",
      "esac"
    ],
    "description": "case"
  },
  "if [[]]": {
    "prefix": "iff",
    "body": [
      "if [[ ${1:cond} ]]; then",
      "\t${2::}",
      "fi"
    ],
    "description": "if [[]]"
  },
  "if []": {
    "prefix": "if",
    "body": [
      "if [ ${1:cond} ]; then",
      "\t${2::}",
      "fi"
    ],
    "description": "if []"
  },
  "if els []": {
    "prefix": "ife",
    "body": [
      "if [ ${1:cond} ]; then",
      "\t${2::}",
      "else",
      "\t${3::}",
      "fi"
    ],
    "description": "if else []"
  },
  "if elif []": {
    "prefix": "elif",
    "body": [
      "elif [ ${1:cond} ]; then",
      "\t${1::}"
    ],
    "description": "if elif []"
  },
  "function": {
    "prefix": "fn",
    "body": [
      "function ${1:foo}() {",
      "\t${0:# code...}",
      "}"
    ],
    "description": "function"
  }
}
